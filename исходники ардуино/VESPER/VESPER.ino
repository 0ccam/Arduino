#include <iarduino_Modbus.h>    // Подключаем библиотеку для работы по протоколу Modbus.
ModbusClient modbus(Serial, 2); // Создаём объект для работы по протоколу Modbus указав класс Serial и номер вывода DE конвертера UART-RS485.


void VESPER_start(){
  /* Параметры функции:
   * Адрес устройства: 0 - Широковещательная передача.
   * Номер регистра: 0 - Регистр управления (Регистры одновременного вещания).
   * Бит 0: 1 - Пуск вперёд. (Бит 1 - Пуск назад)
   */
  modbus.holdingRegisterWrite(0, 0, 1);
}

void VESPER_stop(){
  /* Параметры функции:
   * Адрес устройства: 0 - Широковещательная передача.
   * Номер регистра: 0 - Регистр управления (Регистры одновременного вещания).
   * Значение регистра: 0 - Остановка.
   */
  modbus.holdingRegisterWrite(0, 0, 0);
}

void VESPER_speed(unsigned int speed){
  /* Параметры функции:
   * Адрес устройства: 0 - Широковещательная передача.
   * Номер регистра: 1 - Регистр задания частоты (Регистры одновременного вещания).
   * Значение регистра: Задание частоты (ХХХ.ХХ, 50.00Гц - 5000 DEC формат, 1388 – НЕХ формат)
   */
  modbus.holdingRegisterWrite(0, 1, speed);
}

void setup() {
  Serial.begin(9600);
  modbus.begin(); // Инициируем работу по протоколу Modbus.
  modbus.setTypeMB( MODBUS_RTU ); // Указываем тип протокола Modbus: MODBUS_RTU (по умолчанию), или MODBUS_ASCII.
  modbus.setTimeout( 10 ); // Указываем жать ответ от модулей не более 10 мс.
  modbus.setDelay( 5 ); // Указываем выдерживать паузу между пакетами в 5 мс.
}

void loop() {
  VESPER_start();
  for (int i = 0; i < 1000; i++){
    VESPER_speed(i);
    //delay(200);
  }
  VESPER_stop();
  delay(2000);
}
